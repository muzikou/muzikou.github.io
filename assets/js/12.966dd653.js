(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{208:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" Let")]),t._v(" "),s("p",[s("strong",[s("font",{attrs:{color:"#d63200"}},[t._v("ES6")])],1),t._v(" 新增了 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 命令，用于声明变量的关键字。其用法类似于 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("var")])],1),t._v("，需要注意以下几点：")]),t._v(" "),s("ol",[s("li",[t._v("具有块级作用域"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 所声明的变量只在 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 命令所在的代码块内有效，即块级作用域。 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("var")])],1),t._v(" 声明的是全局变量不具备这一点。"),s("br"),t._v("\n同时 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 声明的变量可以有效的防止循环变量变成全局变量。")])]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let 所声明的变量只在 let 命令所在的代码块内有效。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a is not defined ")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("不存在变量提升"),s("br"),t._v("\n我们都知道 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("var")])],1),t._v(" 命令会发生“变量提升”现象， 即变量可以在声明之前使用，值为 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("undefined")])],1),t._v(" 。其实这样是有些不符合逻辑的，因为按照一般的逻辑，变量应该在声明语句之后才可以使用。"),s("br"),t._v("\n为了纠正这种现象， "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 命令改变了语法行为，它所声明的变量一定要在声明后使用，否则便会报错。")])]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  不存在变量提升")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Cannot access 'b' before initialization")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("暂时性死区"),s("br"),t._v("\n只要块级作用域内存在 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v("  命令，它所声明的变量就“绑定”（ binding ）这个区域，不再受外部的影响。")])]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 暂时性死区")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: Cannot access 'd' before initialization")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("由上面的代码我们可以看出，在代码块内， 使用 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v("  命令声明变量之前，该变量都是不可用的。这在语法上称为“暂时性死区”（ temporal dead one ，简称 TDZ ）。"),s("br"),t._v("\n4. 不允许重复声明"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 不允许在相同作用域内重复声明同一个变量。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let 不允许在相同作用域内重复声明同一个变量。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught SyntaxError: Identifier 'e' has already been declared")]),t._v("\n")])])]),s("h2",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("const")])],1),t._v(" 声明 个只读的常量。 一旦声明，常量的值就不能改变")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: Assignment to constant variable.")]),t._v("\n")])])]),s("ol",[s("li",[t._v("也具有块级作用域")]),t._v(" "),s("li",[t._v("因为 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("const")])],1),t._v(" 声明的常量不得改变值。所以 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("const")])],1),t._v(" 一旦声明常量，就必须立即初始化，不能留到以后赋值.")])]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" g  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught SyntaxError: Missing initializer in const declaration")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("const")])],1),t._v(" 命令声明的常量也不会提升，同样存在暂时性死区，只能在声明后使用。")])]),t._v(" "),s("p",[s("strong",[s("font",{attrs:{color:"#d63200"}},[t._v("let const var 区别")])],1)]),t._v(" "),s("ul",[s("li",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("var")])],1),t._v(" 声明变量，其作用域是 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("var")])],1),t._v(" 所在的函数内，存在变量提升，值为 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("undefined")])],1)]),t._v(" "),s("li",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 声明变量，其作用域是 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("let")])],1),t._v(" 所在的代码块内，不存在变量提升")]),t._v(" "),s("li",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("const")])],1),t._v(" 声明常量，其作用域是所在的代码块内，不存在变量提升 ,不可更改常量的值")])])])}),[],!1,null,null,null);a.default=r.exports}}]);