(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{257:function(t,r,o){"use strict";o.r(r);var _=o(0),s=Object(_.a)({},(function(){var t=this,r=t.$createElement,o=t._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"_1-概述"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),o("p",[t._v("传统开发模式的经常会面临一些问题，如命名冲突、文件依赖等，因此需要 通过模块化 解决上述问题。")]),t._v(" "),o("p",[o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("模块化：")])],1),t._v(" 就是把单独的一个功能封装到一个模块中，模块之间相互隔离，但是可以通过特定接口公开内部成员，也可以依赖别的模块。"),o("br"),t._v(" "),o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("好处：")])],1),t._v(" 方便了代码的重用，从而提高开发效率、降低维护成本。")]),t._v(" "),o("h2",{attrs:{id:"_2-浏览器端模块化规范"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器端模块化规范"}},[t._v("#")]),t._v(" 2.浏览器端模块化规范")]),t._v(" "),o("p",[o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("AMD")])],1),t._v(" 典型代表有 "),o("a",{attrs:{href:"https://github.com/requirejs/requirejs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Require.js"),o("OutboundLink")],1),o("br"),t._v(" "),o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("CMD")])],1),t._v(" 典型代表有 "),o("a",{attrs:{href:"https://github.com/seajs/seajs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sea.js"),o("OutboundLink")],1)]),t._v(" "),o("h2",{attrs:{id:"_3-服务器端模块化规范"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务器端模块化规范"}},[t._v("#")]),t._v(" 3.服务器端模块化规范")]),t._v(" "),o("p",[o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("CommonJS")])],1)]),t._v(" "),o("ol",[o("li",[t._v("模块分为 单文件 模块 与 包")]),t._v(" "),o("li",[t._v("模块成员导出："),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("module.exports")])],1),t._v(" 和 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("exports   ")])],1)]),t._v(" "),o("li",[t._v("模块成员导入："),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("require('模块标识符')")])],1)])]),t._v(" "),o("h2",{attrs:{id:"_4-es6模块化"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-es6模块化"}},[t._v("#")]),t._v(" 4.ES6模块化")]),t._v(" "),o("p",[o("strong",[t._v("前提：")]),t._v(" 在 ES6 模块化规范诞生之前，Javascript 社区虽尝试提出 AMD、CMD、和 CommonJS 等模块化规范，但是由于自身存在一定的差异性与局限性，并不是浏览器和服务端通用的模块化标准，例如：")]),t._v(" "),o("ul",[o("li",[o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("AMD")])],1),t._v(" 和 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("CMD")])],1),t._v(" 只适用于浏览器端的 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("Javascript")])],1),t._v(" 模块化")]),t._v(" "),o("li",[o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("CommonJS")])],1),t._v(" 只适用于服务端 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("Javascript")])],1),t._v(" 模块化")])]),t._v(" "),o("p",[t._v("因此定义了 ES6 模块化规范，是浏览器端和服务端通用的模块化开发规范。")]),t._v(" "),o("p",[o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("ES6模块化规范定义：")])],1)]),t._v(" "),o("ol",[o("li",[t._v("每一个 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("JS")])],1),t._v(" 文件都是一个独立的模块")]),t._v(" "),o("li",[o("strong",[t._v("导入模块成员")]),t._v(" 使用 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("import")])],1),t._v(" 关键字")]),t._v(" "),o("li",[o("strong",[t._v("暴露模块成员")]),t._v(" 使用 "),o("em",[o("font",{attrs:{color:"#d63200"}},[t._v("export")])],1),t._v(" 关键字")])])])}),[],!1,null,null,null);r.default=s.exports}}]);