(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{235:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("面向对象更贴近于我们的实际生活，可以使用面向对象描述现实世界的食物，但是事物分为具体事物和抽象事物。")]),t._v(" "),a("p",[a("strong",[t._v("面向对象的思维特点：")])]),t._v(" "),a("ol",[a("li",[t._v("抽取（抽象）对象共用的属性和行为组织（封装）成一个类（模版）")]),t._v(" "),a("li",[t._v("对类进行实例化，获取类的对象")])]),t._v(" "),a("p",[a("font",{attrs:{color:"#d63200"}},[t._v("总结：")]),t._v("面向对象编程中我们考虑的是有哪些对象，按照面向对象的思维特点，不断的创建对象、使用对象、指挥对象做事情\n但是 对象 和 类 又是什么呢？请继续往下学习")],1),t._v(" "),a("h2",{attrs:{id:"_1、对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、对象"}},[t._v("#")]),t._v(" 1、对象")]),t._v(" "),a("p",[t._v("在现实生活中，万物皆对象，这个对象是 "),a("font",{attrs:{color:"#d63200"}},[t._v("一个具体的事物")]),t._v("，看得见摸得着的实物。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"#d63200"}},[t._v("在Javascript中，对象是一组无序的相关属性和方法的集合，所有的事物都是对象")]),t._v("，例如 字符串，数组，函数等。")],1),t._v(" "),a("p",[t._v("对象是由 "),a("font",{attrs:{color:"#d63200"}},[t._v("属性")]),t._v(" 和 "),a("font",{attrs:{color:"#d63200"}},[t._v("方法")]),t._v(" 组成：")],1),t._v(" "),a("ul",[a("li",[t._v("属性：事物的特征，在对象中用属性来表示（常用名词）")]),t._v(" "),a("li",[t._v("方法：事物的行为，在对象中用 方法来表示（常用动词）")])]),t._v(" "),a("h2",{attrs:{id:"_2、类-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、类-class"}},[t._v("#")]),t._v(" 2、类 Class")]),t._v(" "),a("p",[t._v("在 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("ES6")])],1),t._v(" 中新增加了类的概念，可以使用 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("class")])],1),t._v(" 关键词声明一个类，然后用这个类来实例化对象。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#d63200"}},[t._v("类")]),t._v(" 抽象了对象的公共部分，泛指某一大类;"),a("br"),t._v(" "),a("font",{attrs:{color:"#d63200"}},[t._v("对象")]),t._v(" 特指某一个，通过实例化一个具体的对象。")],1),t._v(" "),a("p",[a("strong",[t._v("创建类")])]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// class body")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建实例：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#d63200"}},[t._v("注意：类必须使用 new 实例化对象")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"_3、类的构造函数-constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、类的构造函数-constructor"}},[t._v("#")]),t._v(" 3、类的构造函数 constructor")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("constructor()")])],1),t._v(" 是类的构造函数（默认生成），用于传递参数，返回实例对象，通过 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("new")])],1),t._v(" 命令生成对象实例时，自动调用该方法。如果没有显示定义，类内部就会自动给我们创建一个 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("constructor")])],1)]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代码示例：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("saysomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello，我是'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" saysomething"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'muzi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lee'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我在测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#d63200"}},[t._v("注意：")])],1),t._v(" "),a("ol",[a("li",[t._v("通过 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("class")])],1),t._v(" 关键字创建类，类名我们还是习惯性定义 首字母 大写;")]),t._v(" "),a("li",[t._v("类里面有一个 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("constructor")])],1),t._v(" 函数，可以接受传递过来的参数，并返回实例对象;")]),t._v(" "),a("li",[t._v("只要 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("new")])],1),t._v(" 生成实例时，就会自动调用 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("constructor")])],1),t._v(" 函数，如果我们不去定义 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("constructor")])],1),t._v(" 函数，实例对象也会默认生成该函数;")]),t._v(" "),a("li",[t._v("生成实例时 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("new")])],1),t._v(" 不能省略;")]),t._v(" "),a("li",[t._v("最后注意语法规范，创建类的时候，类名后面不要加小括号；生成类的实例时，类名后面要加小括号；构造函数不需要加 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("function")])],1),t._v(" ,其实在类里面 所有的函数都不需要加 "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("function")])],1),t._v(";")]),t._v(" "),a("li",[t._v("多个方法之间 不需要 用 逗号 "),a("font",{attrs:{color:"#d63200"}},[t._v("( , )")]),t._v(" 隔开。")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("注意")]),t._v(" "),a("blockquote",[a("p",[t._v("1、在 ES6 中没有变量提升，所以必须先定义类，才能通过类实例化对象"),a("br"),t._v("\n2、类里面公共的属性和方法一定要加 this 使用"),a("br"),t._v("\n3、类里面的 this 指向问题： constructor 构造函数中的 this 指向的是 实例化对象，方法里面的this 指向这个方法的调用者")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);