(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{254:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"indexof-和-lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof-和-lastindexof"}},[t._v("#")]),t._v(" indexOf() 和 lastIndexOf()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("indexOf()")])],1),t._v(" 方法可返回某个指定的字符串值在字符串中首次出现的位置。"),a("br"),t._v(" "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("lastIndexOf()")])],1),t._v(" 方法可返回一个指定的字符串值最后出现的位置。"),a("br"),t._v("\n如果没有找到匹配的字符串则返回 -1。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// searchvalue：必需。规定需检索的字符串值。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start：可选。规定在字符串中开始检索的位置。如省略该参数，则将从字符串的首字符开始检索.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意： indexOf() 方法区分大小写。")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// searchvalue：必需。规定需检索的字符串值。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start：可选。规定在字符串中开始检索的位置。如省略该参数，则将从字符串的最后一个字符处开始检索.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastIndexOf() 方法区分大小写。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastIndexOf() 方法将从后向前检索字符串，但返回是从起始位置(0)开始计算子字符串最后出现的位置。 看它是否含有字符串。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastIndexOf() 方法开始检索的位置在字符串的 start 处或字符串的结尾（没有指定 start 时）。")]),t._v("\n")])])]),a("h2",{attrs:{id:"search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[t._v("#")]),t._v(" search()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("search()")])],1),t._v(" 方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回字符串的起始位置。如果没有找到任何匹配的子串，则返回 -1。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// searchvalue：必需。查找的字符串或者正则表达式。")]),t._v("\n")])])]),a("h2",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("search()")])],1),t._v(" 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// regexp：必需。 规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。")]),t._v("\n")])])]),a("h2",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" replace()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("replace()")])],1),t._v(" 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("stringObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("substr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("replacement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// regexp/substr：被替换的字符串或者正则表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// replacement：替换为的字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回值：替换完成以后的一个新字符串，是用 replacement 替换了 regexp 的第一次匹配或所有匹配之后得到的")]),t._v("\n")])])]),a("h2",{attrs:{id:"slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("slice()")])],1),t._v(" 方法可提取字符串的某个部分，并以新的字符串返回被提取的部分。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start：必须. 要抽取的片断的起始下标(包含)。第一个字符位置为 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// end：可选。 紧接着要截取的片段结尾的下标。若未指定此参数，则要提取的子串包括 start 到原字符串结尾的字符串。如果该参数是负数，那么它规定的是从字符串的尾部开始算起的位置")]),t._v("\n")])])]),a("h2",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" split()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("split() ")])],1),t._v(" 方法用于把一个字符串分割成字符串数组。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("separator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// separator：可选。字符串或正则表达式，从该参数指定的地方分割 string Object。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// limit：可选。该参数可指定返回的数组的最大长度。 如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。")]),t._v("\n")])])]),a("h2",{attrs:{id:"substr-和-substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substr-和-substring"}},[t._v("#")]),t._v(" substr() 和 substring()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("substr()")])],1),t._v(" 方法可在字符串中抽取从 开始 下标开始的指定数目的字符。"),a("br"),t._v(" "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("substring()")])],1),t._v(" 方法用于提取字符串中介于两个指定下标之间的字符，返回的子串包括 开始 处的字符，但不包括 结束 处的字符。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start：必需。要抽取的子串的起始下标。如果是负数，那么该参数声明从字符串的尾部开始算起的位置。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// length：可选。子串中的字符数。 如果省略了该参数，那么返回从 stringObject 的开始位置到结尾的字串。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：substr()方法不会改变源字符串")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from：必需。一个非负的整数，规定要提取的子串的第一个字符在 string Object 中的位置。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to：可选。如果省略该参数，那么返回的子串会一直到字符串的结尾。")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"trim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trim"}},[t._v("#")]),t._v(" trim()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("trim()")])],1),t._v(" 方法用于删除字符串的头尾空格。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'  trim()   方法   '")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：trim()方法不会改变原始字符串,返回一个新的字符串。")]),t._v("\n")])])]),a("h2",{attrs:{id:"tolowercase-和-touppercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tolowercase-和-touppercase"}},[t._v("#")]),t._v(" toLowerCase()  和 toUpperCase()")]),t._v(" "),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("toLowerCase()")])],1),t._v(" 方法用于把字符串转换为小写。"),a("br"),t._v(" "),a("em",[a("font",{attrs:{color:"#d63200"}},[t._v("toUpperCase()")])],1),t._v(" 方法用于把字符串转换为大写。")])])}),[],!1,null,null,null);s.default=e.exports}}]);