(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{240:function(a,t,s){"use strict";s.r(t);var r=s(0),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"概述："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述："}},[a._v("#")]),a._v(" 概述：")]),a._v(" "),s("h3",{attrs:{id:"_1、什么是正则表达式？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是正则表达式？"}},[a._v("#")]),a._v(" 1、什么是正则表达式？")]),a._v(" "),s("p",[a._v("正则表达式(Regular Expression),描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中提取出符合某个条件的子串等。\n在 JS 中，正则表达式也是 对象。")]),a._v(" "),s("h3",{attrs:{id:"_2、正则表达式的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、正则表达式的特点"}},[a._v("#")]),a._v(" 2、正则表达式的特点")]),a._v(" "),s("ol",[s("li",[a._v("灵活性、逻辑性和功能性非常强;")]),a._v(" "),s("li",[a._v("可以迅速地用极简单的方式达到字符串的复杂控制;")]),a._v(" "),s("li",[a._v("对于刚接触的人来说，比较晦涩难懂。")])]),a._v(" "),s("h2",{attrs:{id:"javascript中的正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的正则表达式"}},[a._v("#")]),a._v(" JavaScript中的正则表达式")]),a._v(" "),s("h3",{attrs:{id:"创建正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建正则表达式"}},[a._v("#")]),a._v(" 创建正则表达式")]),a._v(" "),s("p",[a._v("在 js 中 可以通过两种方式创建正则表达式：")]),a._v(" "),s("ol",[s("li",[a._v("通过 利用 RegExp 对象创建")])]),a._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" regexp "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/表达式/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("2、通过 利用字面量 创建\n;\n2. 通过 利用字面量 创建")]),a._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/666/")]),a._v("\n")])])]),s("h3",{attrs:{id:"测试正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试正则表达式"}},[a._v("#")]),a._v(" 测试正则表达式")]),a._v(" "),s("p",[a._v("test()正则对象方法， 用来检测字符串是否符合正则表达式的规范，返回 true 或 false.")]),a._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("regObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// regObj：是定义的正则表达式")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// str：是检测的字符串")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 简单说就是检测 str 是否符合我们定义的正则表达式规范")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);