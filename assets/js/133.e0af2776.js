(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{334:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"任意类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#任意类型"}},[t._v("#")]),t._v(" 任意类型")]),t._v(" "),s("p",[t._v("有的时候，我们并不确定这个值到底是什么类型或者不需要对该值进行类型检测，就可以标注为 "),s("strong",[s("font",{attrs:{color:"#d63200"}},[t._v("any")])],1),t._v(" 类型")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标注语法:")]),t._v("\n变量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" any1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nany1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" any2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nany2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" any1\n")])])]),s("ul",[s("li",[t._v("任何值都可以赋值给 "),s("code",[t._v("any")]),t._v(" 类型")]),t._v(" "),s("li",[s("code",[t._v("any")]),t._v(" 类型也可以赋值给任意类型")]),t._v(" "),s("li",[s("code",[t._v("any")]),t._v(" 类型有任意属性和方法")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),t._v("标注为 "),s("code",[t._v("any")]),t._v(" 类型，也意味着放弃对该值的类型检测，同时放弃 "),s("code",[t._v("IDE")]),t._v(" 的智能提示。"),s("br"),t._v(" "),s("font",{attrs:{color:"#d63200"}},[t._v("小技巧：")]),t._v(" 指定 "),s("code",[t._v("noImplicitAny: true")]),t._v("，当函数参数出现隐含的 "),s("code",[t._v("any")]),t._v(" 类型时报错")],1)]),t._v(" "),s("h3",{attrs:{id:"未知类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未知类型"}},[t._v("#")]),t._v(" 未知类型")]),t._v(" "),s("p",[s("strong",[s("font",{attrs:{color:"#d63200"}},[t._v("unknown")])],1),t._v("，3.0 版本中新增，属于安全版的 "),s("code",[t._v("any")]),t._v("，但是与 "),s("code",[t._v("any")]),t._v(" 不同的是：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("unknown")]),t._v(" 仅能赋值给 "),s("code",[t._v("unknown")]),t._v("、"),s("code",[t._v("any")])]),t._v(" "),s("li",[s("code",[t._v("unknown")]),t._v(" 没有任何属性和方法")])]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标注语法:")]),t._v("\n变量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" unknown1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nunknown1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  报错\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);