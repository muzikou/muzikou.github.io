(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{236:function(t,r,o){"use strict";o.r(r);var e=o(0),_=Object(e.a)({},(function(){var t=this,r=t.$createElement,o=t._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h3",{attrs:{id:"面向对象编程介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程介绍"}},[t._v("#")]),t._v(" 面向对象编程介绍")]),t._v(" "),o("p",[t._v("众所周知，编程思想可以分为 "),o("strong",[t._v("面向对象")]),t._v(" 和 "),o("strong",[t._v("面向过程")]),t._v(" 两大类。")]),t._v(" "),o("h4",{attrs:{id:"_1、面向过程编程-pop（process-oriented-programming）"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1、面向过程编程-pop（process-oriented-programming）"}},[t._v("#")]),t._v(" 1、面向过程编程 POP（Process-oriented programming）")]),t._v(" "),o("p",[t._v("面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次调用就可以了。"),o("br"),t._v(" "),o("font",{attrs:{color:"#d63200"}},[t._v("总结：")]),t._v("面向过程就是根据问题分析出步骤，再根据步骤依次进行。")],1),t._v(" "),o("h4",{attrs:{id:"_2、面向对象编程-oop（object-oriented-programming）"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2、面向对象编程-oop（object-oriented-programming）"}},[t._v("#")]),t._v(" 2、面向对象编程 OOP（Object-oriented programming）")]),t._v(" "),o("p",[t._v("面向对象就是把事务分解成一个个的对象，然后由对象之间分工与合作。在面向对象程序开发思想中，每一个对象都是功能中心，具有明确的分工。"),o("br"),t._v(" "),o("font",{attrs:{color:"#d63200"}},[t._v("总结：")]),t._v("面向对象是以对象功能来划分问题，而不是步骤。")],1),t._v(" "),o("p",[o("strong",[t._v("面向对象的特性：")])]),t._v(" "),o("ul",[o("li",[t._v("封装性")]),t._v(" "),o("li",[t._v("继承性")]),t._v(" "),o("li",[t._v("多态性")])]),t._v(" "),o("blockquote",[o("p",[o("strong",[o("font",{attrs:{color:"#d63200"}},[t._v("比较：")])],1)]),t._v(" "),o("blockquote",[o("ol",[o("li",[t._v("面向过程 性能比面向对象高，适合跟硬件联系很紧密的东西, 但是 不易维护、不易复用、不易扩展。")]),t._v(" "),o("li",[t._v("面向对象 易维护，易服用，易扩展， 由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统 更加灵活、更加易于维护，但是 性能比面向过程 低。")])])])])])}),[],!1,null,null,null);r.default=_.exports}}]);