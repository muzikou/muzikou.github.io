(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{239:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"join-和-tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join-和-tostring"}},[t._v("#")]),t._v(" join() 和 toString()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("join() ")])],1),t._v(" 用于把数组中的所有元素转换一个字符串。元素是通过指定的分隔符进行分隔的，返回一个字符串。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("toString() ")])],1),t._v(" 方法可把数组转换为字符串，并返回结果。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("separator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// separator: 可选。指定要使用的分隔符。如果省略该参数，则使用逗号作为分隔符 ")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：数组中的元素之间用逗号分隔")]),t._v("\n")])])]),s("h2",{attrs:{id:"pop-和-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop-和-push"}},[t._v("#")]),t._v(" pop() 和 push()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("pop() ")])],1),t._v(" 方法用于删除数组的最后一个元素并返回删除的元素。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("push() ")])],1),t._v(" 方法可向数组的末尾添加一个或多个元素，并返回新的长度。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：此方法改变数组的长度。")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" itemX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// item1, item2, ..., itemX: 必需。要添加到数组的元素。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意： ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新元素将添加在数组的末尾。   ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此方法改变数组的长度。")]),t._v("\n")])])]),s("h2",{attrs:{id:"shift-和-unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift-和-unshift"}},[t._v("#")]),t._v(" shift() 和 unshift()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("shift() ")])],1),t._v("  方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("unshift() ")])],1),t._v("  方法可向数组的开头添加一个或更多元素，并返回新的长度。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：此方法改变数组的长度。")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("item2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" itemX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：此方法改变数组的长度。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// item1, item2, ..., itemX: 可选。向数组起始位置添加一个或者多个元素。")]),t._v("\n")])])]),s("h2",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("slice()")])],1),t._v(" 方法可从已有的数组中返回选定的元素，也可以提取字符串的某个部分，并以新的字符串返回被提取的部分。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start: 可选。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// end: 可选。规定从何处结束选取。该参数是数组片断结束处的数组下标(不包含此下标)。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素;")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("slice()")])],1),t._v(" 方法不会改变原始数组。")],1)]),t._v(" "),s("h2",{attrs:{id:"splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[t._v("#")]),t._v(" splice()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("splice() ")])],1),t._v(" 方法用于添加或删除数组中的元素。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("howmany"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("item1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("itemX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index: 必需。规定从何处添加/删除元素。该参数是开始插入和（或）删除的数组元素的下标，必须是数字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// howmany: 可选。规定应该删除多少元素。必须是数字，但可以是 "0"。如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// item1, ..., itemX：可选。要添加到数组的新元素")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("splice()")])],1),t._v(" 方法会改变原始数组。")],1)]),t._v(" "),s("h2",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[t._v("#")]),t._v(" forEach()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("forEach() ")])],1),t._v(" 方法用于调用数组的每个元素，并将元素传递给回调函数。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\narray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentvalue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// currentValue: 数组当前项的值; ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index: 数组当前项的索引;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr:  数组对象本身 ")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("forEach() ")])],1),t._v(" 对于空数组是不会执行回调函数的。")],1)]),t._v(" "),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("map() ")])],1),t._v(" 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。\n"),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("map() ")])],1),t._v(" 方法按照原始数组元素顺序依次处理元素。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentvalue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("map() ")])],1),t._v(" 不会对空数组进行检测。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("map() ")])],1),t._v(" 不会改变原始数组。")],1)]),t._v(" "),s("h2",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("filter() ")])],1),t._v(" 创建一个新的数组，数组中的元素是通过检查制定数组中符合条件的所有元素，主要用于筛选数组\n注意 此方法直接返回一个新的数组")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentvalue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("filter() ")])],1),t._v(" 不会对空数组进行检测。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("filter() ")])],1),t._v(" 不会改变原始数组。")],1)]),t._v(" "),s("h2",{attrs:{id:"some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[t._v("#")]),t._v(" some()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("some() ")])],1),t._v(" 方法用于检测数组中的元素是否满足制定条件，即查找数组中满足条件的元素。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("some() ")])],1),t._v(" 方法会依次执行数组的每个元素："),s("br"),t._v("\n   1. 如果有一个元素满足条件，则表达式返回 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("true")])],1),t._v(" , 剩余的元素不会再执行检测。"),s("br"),t._v("\n   2. 如果没有满足条件的元素，则返回 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("false")])],1),t._v("。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentvalue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("some() ")])],1),t._v(" 不会对空数组进行检测。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("some() ")])],1),t._v(" 不会改变原始数组。")],1)]),t._v(" "),s("h2",{attrs:{id:"every"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#every"}},[t._v("#")]),t._v(" every()")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("every()")])],1),t._v(" 方法用于检测数组所有元素是否都符合指定条件。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("every()")])],1),t._v(" 方法使用指定函数检测数组中的所有元素："),s("br"),t._v("\n   1. 如果数组中检测到有一个元素不满足，则整个表达式返回 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("false")])],1),t._v(" ，且剩余的元素不会再进行检测。"),s("br"),t._v("\n   1. 如果所有元素都满足条件，则返回 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("true")])],1),t._v("。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentvalue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("注意：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("every()")])],1),t._v(" 不会对空数组进行检测。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("every()")])],1),t._v(" 不会改变原始数组。")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);