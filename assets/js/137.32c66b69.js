(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{336:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"空和未定义类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空和未定义类型"}},[t._v("#")]),t._v(" 空和未定义类型")]),t._v(" "),a("p",[t._v("因为 "),a("strong",[a("font",{attrs:{color:"#d63200"}},[t._v("Null")])],1),t._v(" 和 "),a("strong",[a("font",{attrs:{color:"#d63200"}},[t._v("Undefined")])],1),t._v(" 这两种类型有且只有一个值，如果标注一个变量为 "),a("code",[t._v("Null")]),t._v(" 和 "),a("code",[t._v("Undefined")]),t._v(" 类型，那就表示该变量不能修改了，如下所示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" un"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" undefined"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nun "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误: 不能将类型“1”分配给类型“undefined”")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nul"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnul "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误: 不能将类型“1”分配给类型“null”")]),t._v("\n")])])]),a("p",[t._v("默认情况下 "),a("code",[t._v("null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 是所有类型的子类型。 所以可以把 "),a("code",[t._v("Null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 赋值给其它类型的变量，如下所示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" aa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'字符串类型'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\naa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以")]),t._v("\naa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" undefined"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[a("font",{attrs:{color:"#d63200"}},[t._v("提示：")])],1),t._v(" 如果一个变量声明了，但是未赋值，那么该变量的值为 "),a("code",[t._v("undefined")]),t._v("，但是如果它同时也没有标注类型的话，默认类型为 "),a("code",[t._v("any")]),t._v("。")])]),t._v(" "),a("p",[t._v("很多时候在日常的开发过程中为了更有效的检测 "),a("code",[t._v("null")]),t._v(" 值数据，可以在 "),a("code",[t._v("tsconfig.json")]),t._v(" 中配置 "),a("code",[t._v("strictNullChecks: true")]),t._v("，从而避免很多常见问题，使程序更加严谨。"),a("br"),t._v("\n配置完成之后，编辑器就会有所提示：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// let b: any //提示：变量 "b" 隐式具有 "any" 类型，但可以从用法中推断出更好的类型')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);